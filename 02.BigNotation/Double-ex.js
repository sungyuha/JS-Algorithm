function double(arr) {
    // 입력 된 배열의 길이가 10이면 새로운 배열에 저장 되는 아이템이 열 개가 됨
    // 입력 된 배열의 길이가 50이면 새로운 배열에 저장 되는 아이템이 50게가 되어 그것을 리턴
    // 그래서 차지 하는 공간은 입력 된 배열의 크기와 비례해서 커지게 됨
    let newArr = [];
    // 새로운 배열을 만들고
    for (let i = 0; i < arr.length; i++ ) {
        // 첫 번째 배열 값들을 루프로 접근해서 곱한 후에 
        newArr.push(2 * arr[i]);
        // 새로운 배열에 push하고 새 배열이 돌아옴
    }
    return newArr; // n numbers O(n) 공간을 차지
    // ex) 배열의 크기가 늘어나서 무한대에 가까워질수록 공간 복잡도가 어떻게 될까?
    // js가 그런 숫자를 감당하지 못 한다는 사실은 무시하고 이 알고리즘이 차지하는 공간이 어떻게 되는지 생각해야 함
}